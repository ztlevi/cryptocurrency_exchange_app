{"version":3,"sources":["../../../backend/dao/api.js"],"names":["axios","cachedCryptoPrice","updateCurrencyPrice","fromSyms","Promise","resolve","reject","get","then","response","status","console","log","data","catch","e"],"mappings":";;;;;;;AAAA;;IAAYA,K;;AAEZ;;AACA;;;;AAEO,IAAIC,gDAAoB,IAAxB;;AAEA,IAAMC,oDAAsB,SAAtBA,mBAAsB,GAAM;AACvC,MAAIC,WAAW,CAAC,KAAD,CAAf;;AAEA,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCN,UACGO,GADH,CACO,8CAAyBJ,QAAzB,4BADP,EAEGK,IAFH,CAEQ,oBAAY;AAChB,UAAIC,SAASC,MAAT,KAAoB,GAAxB,EAA6B;AAC3BC,gBAAQC,GAAR,CAAY,uCAAZ;AACA,gBAXCX,iBAWD,uBAAoBQ,SAASI,IAA7B;AACAR,gBAAQ,CAAR;AACD,OAJD,MAIO;AACLM,gBAAQC,GAAR,CAAY,sCAAZ;AACAP,gBAAQ,CAAR;AACD;AACF,KAXH,EAYGS,KAZH,CAYS;AAAA,aAAKR,OAAOS,CAAP,CAAL;AAAA,KAZT;AAaD,GAdM,CAAP;AAeD,CAlBM","file":"api.js","sourcesContent":["import * as axios from 'axios';\n\nimport { cryptoType } from '../res/cryptoConfigs';\nimport { cryptoRealtimeRequestUrl } from '../utils/cryptoDataUrls';\n\nexport let cachedCryptoPrice = null;\n\nexport const updateCurrencyPrice = () => {\n  let fromSyms = ['USD'];\n\n  return new Promise((resolve, reject) => {\n    axios\n      .get(cryptoRealtimeRequestUrl(fromSyms, cryptoType))\n      .then(response => {\n        if (response.status === 200) {\n          console.log('Fetch cryptocurrency price succeed!!!');\n          cachedCryptoPrice = response.data;\n          resolve(1);\n        } else {\n          console.log('Fetch cryptocurrency price failed!!!');\n          resolve(0);\n        }\n      })\n      .catch(e => reject(e));\n  });\n};\n"]}
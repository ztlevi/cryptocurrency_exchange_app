{"version":3,"sources":["../../../backend/utils/cryptoDataUrls.js"],"names":["cryptoRootUrl","cryptoRealtimeRequestUrl","fromSyms","toSyms","join","cryptoBatchRequestUrl","fromSym","toSym","intervalType","limit","aggregate"],"mappings":";;;;;AAAO,IAAMA,wCAAgB,wCAAtB;;AAEP;;;;;;AAMO,IAAMC,8DAA2B,SAA3BA,wBAA2B,CAACC,QAAD,EAAkBC,MAAlB,EAAoC;AAC1E,SAAUH,aAAV,0BAA4CE,SAASE,IAAT,EAA5C,eAAqED,OAAOC,IAAP,EAArE;AACD,CAFM;;AAIP;AACO,IAAMC,wDAAwB,SAAxBA,qBAAwB,CACnCC,OADmC,EAEnCC,KAFmC,EAGnCC,YAHmC,EAInCC,KAJmC,EAMhC;AAAA,MADHC,SACG,uEADS,CACT;;AACH,SAAUV,aAAV,cAAgCQ,YAAhC,cAAqDF,OAArD,cAAqEC,KAArE,mBAAwFG,SAAxF,eAA2GD,KAA3G;AACD,CARM","file":"cryptoDataUrls.js","sourcesContent":["export const cryptoRootUrl = 'https://min-api.cryptocompare.com/data';\n\n/**\n * generate crypto request to fetch multiple symbols price\n * @param fromSyms: Array\n * @param toSyms: Array\n * @returns {string}\n */\nexport const cryptoRealtimeRequestUrl = (fromSyms: Array, toSyms: Array) => {\n  return `${cryptoRootUrl}/pricemulti?fsyms=${fromSyms.join()}&tsyms=${toSyms.join()}`;\n};\n\n// generate crypto request to fetch multiple symbols price\nexport const cryptoBatchRequestUrl = (\n  fromSym,\n  toSym,\n  intervalType,\n  limit,\n  aggregate = 1\n) => {\n  return `${cryptoRootUrl}/histo${intervalType}?fsym=${fromSym}&tsym=${toSym}&aggregate=${aggregate}&limit=${limit}`;\n};\n"]}